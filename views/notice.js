const fixedNotices = [
    {
        id: 'fixed-1',
        title: '[Ïù¥Î≤§Ìä∏] ÏÇ¨Ïö©Ïûê ÏÑ§Î¨∏Ï°∞ÏÇ¨ Ï∞∏Ïó¨ Ïù¥Î≤§Ìä∏ ÏïàÎÇ¥',
        date: '2025-03-04',
        views: '-',
        link: 'fixed_notice_1.html'
    }
];

async function fetchNotices() {
    const params = new URLSearchParams(location.search);
    const filter = params.get('filter');
    const keyword = params.get('keyword');

    let url = '/notice';
    if (filter && keyword) {
        url += `?filter=${encodeURIComponent(filter)}&keyword=${encodeURIComponent(keyword)}`;
    }

    try {
        const response = await fetch(url);
        const dbNotices = await response.json();

        renderNotices(dbNotices);  // ÏùºÎ∞ò Í≥µÏßÄ Î†åÎçîÎßÅ (Í≥†Ï†ï Í≥µÏßÄÎ≥¥Îã§ ÎÇòÏ§ë)
    } catch (error) {
        console.error('Í≥µÏßÄÏÇ¨Ìï≠ Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®:', error);
    }
}

// Í≥†Ï†ï Í≥µÏßÄ Î†åÎçîÎßÅ (Îß® ÏúÑÏóê ÌëúÏãú)
function renderFixedNotices() {
    const tbody = document.getElementById('notice-list');
    console.log("üîç notice-list ÏöîÏÜå ÌôïÏù∏:", tbody); // ÎîîÎ≤ÑÍπÖ

    if (!tbody) return;  // ÏöîÏÜåÍ∞Ä ÏóÜÏúºÎ©¥ Ìï®Ïàò Ï¢ÖÎ£å

    fixedNotices.forEach(notice => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
            <td>
                <a href="${notice.link}" class="notice-link" style="color: #7a69c4; font-weight: bold;">
                    ${notice.title}
                </a>
            </td>
            <td>${notice.date}</td>
            <td>${notice.views}</td>
        `;
        tbody.appendChild(tr);
    });
}

// ÏùºÎ∞ò Í≥µÏßÄ Î†åÎçîÎßÅ (Í≥†Ï†ï Í≥µÏßÄ ÏïÑÎûòÏóê ÌëúÏãú)
function renderNotices(notices) {
    const tbody = document.getElementById('notice-list');
    if (!tbody) return;

    notices.forEach(notice => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
            <td><a href="/notice_detail.html?id=${notice.notice_id}" class="notice-link">${notice.notice_title}</a></td>
            <td>${notice.date}</td>
            <td>${notice.views}</td>
        `;
        tbody.appendChild(tr);
    });
}

// Í≥†Ï†ï Í≥µÏßÄÎ•º Î®ºÏ†Ä Î†åÎçîÎßÅÌïòÍ≥†, ÏùºÎ∞ò Í≥µÏßÄÎ•º Î∂àÎü¨Ïò§Îäî Î∞©Ïãù
document.addEventListener('DOMContentLoaded', () => {
    renderFixedNotices();  // Î®ºÏ†Ä Í≥†Ï†ï Í≥µÏßÄ Î†åÎçîÎßÅ
    fetchNotices();  // Í∑∏ Îã§Ïùå ÏùºÎ∞ò Í≥µÏßÄ Î∂àÎü¨Ïò§Í∏∞
});

async function checkAdmin() {
    try {
        const authResponse = await fetch('/auth/status', {
            credentials: 'include'  // ÏÑ∏ÏÖò Ïø†ÌÇ§ Ìè¨Ìï®
        });
        const authStatus = await authResponse.json();
        console.log("Ïù∏Ï¶ù ÏÉÅÌÉú ÌôïÏù∏:", authStatus);

        if (authStatus.user && authStatus.user.isAdmin === 1) {
            const writeBtn = document.createElement('button');
            writeBtn.innerText = 'Í∏ÄÏì∞Í∏∞';
            writeBtn.classList.add('write-btn');
            writeBtn.onclick = () => location.href = '/write_notice.html';

            const container = document.querySelector('.notice-container');
            if (container) {
                container.prepend(writeBtn);
            } else {
                console.error('.notice-container ÏöîÏÜåÍ∞Ä ÏóÜÏäµÎãàÎã§.');
            }
        }
    } catch (error) {
        console.error('Í¥ÄÎ¶¨Ïûê Ï≤¥ÌÅ¨ Ïã§Ìå®:', error);
    }
}

document.querySelector('.search-btn').addEventListener('click', () => {
    const filter = document.querySelector('.search-filter').value;
    const keyword = document.querySelector('.search-input').value;

    const query = new URLSearchParams({ filter, keyword }).toString();

    location.href = `/notice.html?${query}`;  // URLÏóê Í≤ÄÏÉâÏñ¥ÏôÄ ÌïÑÌÑ∞ Ï∂îÍ∞Ä
});
